{"ast":null,"code":"// import React, { useState, useRef, useEffect, useCallback } from \"react\";\n// import { Send, Bot, User, MessageSquare, Loader, Sparkles, Upload, File, X, CheckCircle, AlertCircle, FileText } from \"lucide-react\";\n\n// // Types\n// export interface UploadedFile {\n//   id: string;\n//   name: string;\n//   size: number;\n//   type: string;\n//   uploadedAt: Date;\n// }\n\n// export interface ChatMessage {\n//   id: string;\n//   type: 'user' | 'bot';\n//   content: string;\n//   timestamp: Date;\n// }\n\n// // Basic UI Components\n// const Button = React.forwardRef<\n//   HTMLButtonElement,\n//   React.ButtonHTMLAttributes<HTMLButtonElement> & {\n//     variant?: \"default\" | \"ghost\";\n//     size?: \"default\" | \"sm\";\n//   }\n// >(({ className = \"\", variant = \"default\", size = \"default\", ...props }, ref) => {\n//   const baseClasses = \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 disabled:pointer-events-none disabled:opacity-50\";\n//   const variantClasses = {\n//     default: \"bg-blue-600 text-white hover:bg-blue-700\",\n//     ghost: \"hover:bg-gray-100 hover:text-gray-900\"\n//   };\n//   const sizeClasses = {\n//     default: \"h-10 px-4 py-2\",\n//     sm: \"h-9 rounded-md px-3\"\n//   };\n\n//   return (\n//     <button\n//       className={`${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`}\n//       ref={ref}\n//       {...props}\n//     />\n//   );\n// });\n\n// const Textarea = React.forwardRef<\n//   HTMLTextAreaElement,\n//   React.TextareaHTMLAttributes<HTMLTextAreaElement>\n// >(({ className = \"\", ...props }, ref) => (\n//   <textarea\n//     className={`flex min-h-[80px] w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 ${className}`}\n//     ref={ref}\n//     {...props}\n//   />\n// ));\n\n// // Header Component\n// const Header = () => {\n//   return (\n//     <header className=\"bg-white/90 backdrop-blur-md border-b border-gray-200/50 sticky top-0 z-50\">\n//       <div className=\"container mx-auto px-4 py-4\">\n//         <div className=\"flex items-center gap-3\">\n//           <div className=\"flex items-center gap-3\">\n//             <div className=\"relative\">\n//               <div className=\"absolute inset-0 bg-gradient-to-r from-blue-600 to-indigo-600 rounded-xl blur-sm opacity-75\"></div>\n//               <div className=\"relative p-3 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-xl\">\n//                 <Bot className=\"h-6 w-6 text-white\" />\n//               </div>\n//             </div>\n//             <div>\n//               <h1 className=\"text-2xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 bg-clip-text text-transparent\">\n//                 DocuChat AI\n//               </h1>\n//               <p className=\"text-sm text-gray-500 flex items-center gap-1\">\n//                 <Sparkles className=\"h-3 w-3\" />\n//                 Intelligent Document Assistant\n//               </p>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </header>\n//   );\n// };\n\n// // Document Upload Component\n// const DocumentUpload = ({ onFileUpload, uploadedFiles, onDeleteFile, isUploading }: {\n//   onFileUpload: (files: File[]) => void;\n//   uploadedFiles: UploadedFile[];\n//   onDeleteFile: (fileId: string) => void;\n//   isUploading: boolean;\n// }) => {\n//   const [isDragOver, setIsDragOver] = useState(false);\n\n//   const handleDragOver = useCallback((e: React.DragEvent) => {\n//     e.preventDefault();\n//     setIsDragOver(true);\n//   }, []);\n\n//   const handleDragLeave = useCallback((e: React.DragEvent) => {\n//     e.preventDefault();\n//     setIsDragOver(false);\n//   }, []);\n\n//   const handleDrop = useCallback((e: React.DragEvent) => {\n//     e.preventDefault();\n//     setIsDragOver(false);\n\n//     const files = Array.from(e.dataTransfer.files);\n//     if (files.length > 0) {\n//       onFileUpload(files);\n//     }\n//   }, [onFileUpload]);\n\n//   const handleFileSelect = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n//     const files = Array.from(e.target.files || []);\n//     if (files.length > 0) {\n//       onFileUpload(files);\n//     }\n//     e.target.value = '';\n//   }, [onFileUpload]);\n\n//   const formatFileSize = (bytes: number) => {\n//     if (bytes === 0) return '0 Bytes';\n//     const k = 1024;\n//     const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n//     const i = Math.floor(Math.log(bytes) / Math.log(k));\n//     return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n//   };\n\n//   const getFileIcon = (type: string) => {\n//     if (type.includes('pdf')) return 'üìÑ';\n//     if (type.includes('word') || type.includes('document')) return 'üìù';\n//     if (type.includes('text')) return 'üìã';\n//     if (type.includes('image')) return 'üñºÔ∏è';\n//     return 'üìÅ';\n//   };\n\n//   return (\n//     <div className=\"space-y-6\">\n//       <div\n//         className={`\n//           relative border-2 border-dashed rounded-xl p-8 text-center transition-all duration-300\n//           ${isDragOver \n//             ? 'border-blue-400 bg-blue-50 scale-105' \n//             : 'border-gray-300 hover:border-gray-400 hover:bg-gray-50'\n//           }\n//           ${isUploading ? 'pointer-events-none opacity-50' : 'cursor-pointer'}\n//         `}\n//         onDragOver={handleDragOver}\n//         onDragLeave={handleDragLeave}\n//         onDrop={handleDrop}\n//         onClick={() => document.getElementById('file-input')?.click()}\n//       >\n//         <input\n//           id=\"file-input\"\n//           type=\"file\"\n//           multiple\n//           className=\"hidden\"\n//           onChange={handleFileSelect}\n//           accept=\".pdf,.doc,.docx,.txt,.rtf,.odt\"\n//         />\n\n//         {isUploading ? (\n//           <div className=\"space-y-4\">\n//             <div className=\"flex justify-center\">\n//               <Loader className=\"h-12 w-12 text-blue-500 animate-spin\" />\n//             </div>\n//             <div>\n//               <p className=\"text-lg font-medium text-gray-900\">Uploading documents...</p>\n//               <p className=\"text-sm text-gray-500\">Please wait while we process your files</p>\n//             </div>\n//           </div>\n//         ) : (\n//           <div className=\"space-y-4\">\n//             <div className=\"flex justify-center\">\n//               <div className={`p-4 rounded-full transition-colors duration-300 ${\n//                 isDragOver ? 'bg-blue-100' : 'bg-gray-100'\n//               }`}>\n//                 <Upload className={`h-8 w-8 transition-colors duration-300 ${\n//                   isDragOver ? 'text-blue-500' : 'text-gray-400'\n//                 }`} />\n//               </div>\n//             </div>\n//             <div>\n//               <p className=\"text-lg font-medium text-gray-900\">\n//                 {isDragOver ? 'Drop your files here' : 'Upload your documents'}\n//               </p>\n//               <p className=\"text-sm text-gray-500 mt-1\">\n//                 Drag and drop or click to browse\n//               </p>\n//               <p className=\"text-xs text-gray-400 mt-2\">\n//                 Supports PDF, DOC, DOCX, TXT files\n//               </p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n\n//       {uploadedFiles.length > 0 && (\n//         <div className=\"space-y-3\">\n//           <h3 className=\"text-sm font-medium text-gray-700 flex items-center gap-2\">\n//             <CheckCircle className=\"h-4 w-4 text-green-500\" />\n//             Uploaded Files ({uploadedFiles.length})\n//           </h3>\n\n//           <div className=\"space-y-2 max-h-64 overflow-y-auto\">\n//             {uploadedFiles.map((file) => (\n//               <div\n//                 key={file.id}\n//                 className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg border hover:bg-gray-100 transition-colors\"\n//               >\n//                 <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n//                   <span className=\"text-lg\">{getFileIcon(file.type)}</span>\n//                   <div className=\"flex-1 min-w-0\">\n//                     <p className=\"text-sm font-medium text-gray-900 truncate\">\n//                       {file.name}\n//                     </p>\n//                     <p className=\"text-xs text-gray-500\">\n//                       {formatFileSize(file.size)} ‚Ä¢ {file.uploadedAt.toLocaleDateString()}\n//                     </p>\n//                   </div>\n//                 </div>\n\n//                 <Button\n//                   variant=\"ghost\"\n//                   size=\"sm\"\n//                   onClick={() => onDeleteFile(file.id)}\n//                   className=\"text-gray-400 hover:text-red-500 h-8 w-8 p-0\"\n//                 >\n//                   <X className=\"h-4 w-4\" />\n//                 </Button>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       )}\n\n//       {uploadedFiles.length === 0 && !isUploading && (\n//         <div className=\"text-center py-8\">\n//           <AlertCircle className=\"h-8 w-8 text-gray-300 mx-auto mb-3\" />\n//           <p className=\"text-sm text-gray-500\">No documents uploaded yet</p>\n//           <p className=\"text-xs text-gray-400 mt-1\">Upload some documents to start chatting</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// // Chat Interface Component\n// const ChatInterface = ({ messages, onSendMessage, isGenerating, hasDocuments }: {\n//   messages: ChatMessage[];\n//   onSendMessage: (message: string) => void;\n//   isGenerating: boolean;\n//   hasDocuments: boolean;\n// }) => {\n//   const [inputMessage, setInputMessage] = useState(\"\");\n//   const messagesEndRef = useRef<HTMLDivElement>(null);\n//   const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n\n//   useEffect(() => {\n//     scrollToBottom();\n//   }, [messages]);\n\n//   const handleSubmit = (e: React.FormEvent) => {\n//     e.preventDefault();\n//     if (inputMessage.trim() && !isGenerating && hasDocuments) {\n//       onSendMessage(inputMessage.trim());\n//       setInputMessage(\"\");\n//     }\n//   };\n\n//   const handleKeyDown = (e: React.KeyboardEvent) => {\n//     if (e.key === 'Enter' && !e.shiftKey) {\n//       e.preventDefault();\n//       handleSubmit(e);\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex flex-col h-full bg-gradient-to-b from-white to-gray-50/50\">\n//       <div className=\"p-6 border-b border-gray-100/80 bg-white/70 backdrop-blur-sm\">\n//         <div className=\"flex items-center gap-4\">\n//           <div className=\"relative\">\n//             <div className=\"absolute inset-0 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-2xl blur-sm opacity-20\"></div>\n//             <div className=\"relative p-3 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-2xl shadow-lg\">\n//               <MessageSquare className=\"h-6 w-6 text-white\" />\n//             </div>\n//           </div>\n//           <div className=\"flex-1\">\n//             <h2 className=\"text-xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 bg-clip-text text-transparent\">\n//               AI Assistant\n//             </h2>\n//             <p className=\"text-sm text-gray-500 flex items-center gap-2\">\n//               <Sparkles className=\"h-3 w-3\" />\n//               {hasDocuments \n//                 ? \"Ready to answer questions about your documents\" \n//                 : \"Upload documents to start an intelligent conversation\"\n//               }\n//             </p>\n//           </div>\n//           <div className=\"flex items-center gap-2\">\n//             <div className={`w-2 h-2 rounded-full ${hasDocuments ? 'bg-green-400' : 'bg-amber-400'} animate-pulse`}></div>\n//             <span className=\"text-xs text-gray-500 font-medium\">\n//               {hasDocuments ? 'Ready' : 'Waiting'}\n//             </span>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"flex-1 overflow-hidden\">\n//         <div className=\"h-full overflow-y-auto p-6 space-y-6\">\n//           {messages.length === 0 ? (\n//             <div className=\"flex flex-col items-center justify-center h-full text-center py-16\">\n//               <div className=\"relative mb-6\">\n//                 <div className=\"absolute inset-0 bg-gradient-to-r from-blue-100 to-indigo-100 rounded-full blur-xl opacity-50\"></div>\n//                 <div className=\"relative w-20 h-20 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-full flex items-center justify-center border border-blue-100/50\">\n//                   <Bot className=\"h-10 w-10 text-blue-500\" />\n//                 </div>\n//               </div>\n//               <h3 className=\"text-2xl font-bold text-gray-900 mb-3\">\n//                 Welcome to DocuChat AI\n//               </h3>\n//               <p className=\"text-gray-500 max-w-md leading-relaxed\">\n//                 {hasDocuments \n//                   ? \"Your documents are ready! Start by asking me any questions about their content and I'll provide detailed insights.\"\n//                   : \"Upload your documents first, then I'll be ready to provide intelligent answers and insights about their content.\"\n//                 }\n//               </p>\n//               {hasDocuments && (\n//                 <div className=\"mt-6 p-4 bg-blue-50/50 rounded-xl border border-blue-100\">\n//                   <p className=\"text-sm text-blue-600 font-medium\">üí° Try asking questions like:</p>\n//                   <ul className=\"mt-2 text-xs text-blue-500 space-y-1\">\n//                     <li>‚Ä¢ \"What are the main topics covered?\"</li>\n//                     <li>‚Ä¢ \"Can you summarize the key points?\"</li>\n//                     <li>‚Ä¢ \"What specific details about [topic]?\"</li>\n//                   </ul>\n//                 </div>\n//               )}\n//             </div>\n//           ) : (\n//             <>\n//               {messages.map((message) => (\n//                 <div\n//                   key={message.id}\n//                   className={`flex gap-4 ${message.type === 'user' ? 'flex-row-reverse' : 'flex-row'} animate-fade-in`}\n//                 >\n//                   <div className={`flex-shrink-0 w-10 h-10 rounded-2xl flex items-center justify-center shadow-lg ${\n//                     message.type === 'user' \n//                       ? 'bg-gradient-to-r from-emerald-500 to-green-600' \n//                       : 'bg-gradient-to-r from-blue-500 to-indigo-600'\n//                   }`}>\n//                     {message.type === 'user' ? (\n//                       <User className=\"h-5 w-5 text-white\" />\n//                     ) : (\n//                       <Bot className=\"h-5 w-5 text-white\" />\n//                     )}\n//                   </div>\n\n//                   <div className={`flex-1 max-w-4xl ${message.type === 'user' ? 'text-right' : 'text-left'}`}>\n//                     <div className={`inline-block p-4 rounded-2xl shadow-sm ${\n//                       message.type === 'user'\n//                         ? 'bg-gradient-to-r from-emerald-500 to-green-600 text-white'\n//                         : 'bg-white text-gray-900 border border-gray-100'\n//                     }`}>\n//                       <p className=\"whitespace-pre-wrap leading-relaxed\">{message.content}</p>\n//                     </div>\n//                     <p className=\"text-xs text-gray-400 mt-2 px-3 flex items-center gap-1\">\n//                       <span className=\"w-1 h-1 bg-gray-300 rounded-full\"></span>\n//                       {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n//                     </p>\n//                   </div>\n//                 </div>\n//               ))}\n\n//               {isGenerating && (\n//                 <div className=\"flex gap-4 animate-fade-in\">\n//                   <div className=\"flex-shrink-0 w-10 h-10 rounded-2xl bg-gradient-to-r from-blue-500 to-indigo-600 flex items-center justify-center shadow-lg\">\n//                     <Bot className=\"h-5 w-5 text-white\" />\n//                   </div>\n\n//                   <div className=\"flex-1\">\n//                     <div className=\"inline-block p-4 bg-white rounded-2xl shadow-sm border border-gray-100\">\n//                       <div className=\"flex items-center gap-3 text-gray-600\">\n//                         <div className=\"flex space-x-1\">\n//                           <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-bounce\"></div>\n//                           <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-bounce\" style={{animationDelay: '0.1s'}}></div>\n//                           <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-bounce\" style={{animationDelay: '0.2s'}}></div>\n//                         </div>\n//                         <span className=\"text-sm font-medium\">AI is thinking...</span>\n//                       </div>\n//                     </div>\n//                   </div>\n//                 </div>\n//               )}\n//             </>\n//           )}\n//           <div ref={messagesEndRef} />\n//         </div>\n//       </div>\n\n//       <div className=\"p-6 border-t border-gray-100/80 bg-white/70 backdrop-blur-sm\">\n//         <form onSubmit={handleSubmit} className=\"space-y-4\">\n//           <div className=\"relative\">\n//             <Textarea\n//               ref={textareaRef}\n//               value={inputMessage}\n//               onChange={(e) => setInputMessage(e.target.value)}\n//               onKeyDown={handleKeyDown}\n//               placeholder={hasDocuments ? \"Ask anything about your documents...\" : \"Upload documents first to start chatting\"}\n//               disabled={!hasDocuments || isGenerating}\n//               className=\"min-h-[60px] max-h-32 resize-none pr-14 focus:ring-2 focus:ring-blue-500/20 focus:border-blue-300 border-gray-200 bg-white/80 backdrop-blur-sm shadow-sm rounded-xl\"\n//             />\n//             <Button\n//               type=\"submit\"\n//               size=\"sm\"\n//               disabled={!inputMessage.trim() || !hasDocuments || isGenerating}\n//               className=\"absolute bottom-3 right-3 h-8 w-8 p-0 bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 shadow-lg hover:shadow-xl transition-all duration-200 rounded-lg\"\n//             >\n//               <Send className=\"h-4 w-4\" />\n//             </Button>\n//           </div>\n\n//           {!hasDocuments && (\n//             <div className=\"flex items-center gap-2 p-3 bg-amber-50/80 border border-amber-200 rounded-xl\">\n//               <div className=\"w-2 h-2 bg-amber-400 rounded-full animate-pulse\"></div>\n//               <p className=\"text-sm text-amber-700 font-medium\">\n//                 Please upload documents to enable the chat functionality\n//               </p>\n//             </div>\n//           )}\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Main App Component\n// const ConsolidatedApp = () => {\n//   const [uploadedFiles, setUploadedFiles] = useState<UploadedFile[]>([]);\n//   const [chatMessages, setChatMessages] = useState<ChatMessage[]>([]);\n//   const [isUploading, setIsUploading] = useState(false);\n//   const [isGenerating, setIsGenerating] = useState(false);\n\n//   const handleFileUpload = async (files: File[]) => {\n//     setIsUploading(true);\n\n//     // Simulate API call delay\n//     await new Promise(resolve => setTimeout(resolve, 2000));\n\n//     const newFiles: UploadedFile[] = files.map(file => ({\n//       id: Math.random().toString(36).substr(2, 9),\n//       name: file.name,\n//       size: file.size,\n//       type: file.type,\n//       uploadedAt: new Date(),\n//     }));\n\n//     setUploadedFiles(prev => [...prev, ...newFiles]);\n//     setIsUploading(false);\n//   };\n\n//   const handleSendMessage = async (message: string) => {\n//     if (!message.trim()) return;\n\n//     const userMessage: ChatMessage = {\n//       id: Math.random().toString(36).substr(2, 9),\n//       type: 'user',\n//       content: message,\n//       timestamp: new Date(),\n//     };\n\n//     setChatMessages(prev => [...prev, userMessage]);\n//     setIsGenerating(true);\n\n//     // Simulate API call delay\n//     await new Promise(resolve => setTimeout(resolve, 3000));\n\n//     const botMessage: ChatMessage = {\n//       id: Math.random().toString(36).substr(2, 9),\n//       type: 'bot',\n//       content: \"I understand your question about the uploaded documents. This is a simulated response. In a real implementation, this would be connected to your Flask backend API to process the documents and generate intelligent responses based on their content.\",\n//       timestamp: new Date(),\n//     };\n\n//     setChatMessages(prev => [...prev, botMessage]);\n//     setIsGenerating(false);\n//   };\n\n//   const handleDeleteFile = (fileId: string) => {\n//     setUploadedFiles(prev => prev.filter(file => file.id !== fileId));\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100\">\n//       <Header />\n\n//       <div className=\"container mx-auto px-4 py-8 max-w-7xl\">\n//         <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 h-[calc(100vh-12rem)]\">\n//           <div className=\"lg:col-span-1\">\n//             <div className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg border border-white/20 h-full overflow-hidden\">\n//               <div className=\"p-6 border-b border-gray-100\">\n//                 <div className=\"flex items-center gap-3\">\n//                   <div className=\"p-2 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-lg\">\n//                     <FileText className=\"h-5 w-5 text-white\" />\n//                   </div>\n//                   <div>\n//                     <h2 className=\"text-lg font-semibold text-gray-900\">Documents</h2>\n//                     <p className=\"text-sm text-gray-500\">{uploadedFiles.length} files uploaded</p>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               <div className=\"p-6 h-full overflow-y-auto\">\n//                 <DocumentUpload\n//                   onFileUpload={handleFileUpload}\n//                   uploadedFiles={uploadedFiles}\n//                   onDeleteFile={handleDeleteFile}\n//                   isUploading={isUploading}\n//                 />\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"lg:col-span-2\">\n//             <div className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg border border-white/20 h-full\">\n//               <ChatInterface\n//                 messages={chatMessages}\n//                 onSendMessage={handleSendMessage}\n//                 isGenerating={isGenerating}\n//                 hasDocuments={uploadedFiles.length > 0}\n//               />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ConsolidatedApp;","map":{"version":3,"names":[],"sources":["D:/AIprojects/RagChatbot/frontend/src/ConsolidatedApp.tsx"],"sourcesContent":["// import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\n// import { Send, Bot, User, MessageSquare, Loader, Sparkles, Upload, File, X, CheckCircle, AlertCircle, FileText } from \"lucide-react\";\r\n\r\n// // Types\r\n// export interface UploadedFile {\r\n//   id: string;\r\n//   name: string;\r\n//   size: number;\r\n//   type: string;\r\n//   uploadedAt: Date;\r\n// }\r\n\r\n// export interface ChatMessage {\r\n//   id: string;\r\n//   type: 'user' | 'bot';\r\n//   content: string;\r\n//   timestamp: Date;\r\n// }\r\n\r\n// // Basic UI Components\r\n// const Button = React.forwardRef<\r\n//   HTMLButtonElement,\r\n//   React.ButtonHTMLAttributes<HTMLButtonElement> & {\r\n//     variant?: \"default\" | \"ghost\";\r\n//     size?: \"default\" | \"sm\";\r\n//   }\r\n// >(({ className = \"\", variant = \"default\", size = \"default\", ...props }, ref) => {\r\n//   const baseClasses = \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 disabled:pointer-events-none disabled:opacity-50\";\r\n//   const variantClasses = {\r\n//     default: \"bg-blue-600 text-white hover:bg-blue-700\",\r\n//     ghost: \"hover:bg-gray-100 hover:text-gray-900\"\r\n//   };\r\n//   const sizeClasses = {\r\n//     default: \"h-10 px-4 py-2\",\r\n//     sm: \"h-9 rounded-md px-3\"\r\n//   };\r\n  \r\n//   return (\r\n//     <button\r\n//       className={`${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`}\r\n//       ref={ref}\r\n//       {...props}\r\n//     />\r\n//   );\r\n// });\r\n\r\n// const Textarea = React.forwardRef<\r\n//   HTMLTextAreaElement,\r\n//   React.TextareaHTMLAttributes<HTMLTextAreaElement>\r\n// >(({ className = \"\", ...props }, ref) => (\r\n//   <textarea\r\n//     className={`flex min-h-[80px] w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 ${className}`}\r\n//     ref={ref}\r\n//     {...props}\r\n//   />\r\n// ));\r\n\r\n// // Header Component\r\n// const Header = () => {\r\n//   return (\r\n//     <header className=\"bg-white/90 backdrop-blur-md border-b border-gray-200/50 sticky top-0 z-50\">\r\n//       <div className=\"container mx-auto px-4 py-4\">\r\n//         <div className=\"flex items-center gap-3\">\r\n//           <div className=\"flex items-center gap-3\">\r\n//             <div className=\"relative\">\r\n//               <div className=\"absolute inset-0 bg-gradient-to-r from-blue-600 to-indigo-600 rounded-xl blur-sm opacity-75\"></div>\r\n//               <div className=\"relative p-3 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-xl\">\r\n//                 <Bot className=\"h-6 w-6 text-white\" />\r\n//               </div>\r\n//             </div>\r\n//             <div>\r\n//               <h1 className=\"text-2xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 bg-clip-text text-transparent\">\r\n//                 DocuChat AI\r\n//               </h1>\r\n//               <p className=\"text-sm text-gray-500 flex items-center gap-1\">\r\n//                 <Sparkles className=\"h-3 w-3\" />\r\n//                 Intelligent Document Assistant\r\n//               </p>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </header>\r\n//   );\r\n// };\r\n\r\n// // Document Upload Component\r\n// const DocumentUpload = ({ onFileUpload, uploadedFiles, onDeleteFile, isUploading }: {\r\n//   onFileUpload: (files: File[]) => void;\r\n//   uploadedFiles: UploadedFile[];\r\n//   onDeleteFile: (fileId: string) => void;\r\n//   isUploading: boolean;\r\n// }) => {\r\n//   const [isDragOver, setIsDragOver] = useState(false);\r\n\r\n//   const handleDragOver = useCallback((e: React.DragEvent) => {\r\n//     e.preventDefault();\r\n//     setIsDragOver(true);\r\n//   }, []);\r\n\r\n//   const handleDragLeave = useCallback((e: React.DragEvent) => {\r\n//     e.preventDefault();\r\n//     setIsDragOver(false);\r\n//   }, []);\r\n\r\n//   const handleDrop = useCallback((e: React.DragEvent) => {\r\n//     e.preventDefault();\r\n//     setIsDragOver(false);\r\n    \r\n//     const files = Array.from(e.dataTransfer.files);\r\n//     if (files.length > 0) {\r\n//       onFileUpload(files);\r\n//     }\r\n//   }, [onFileUpload]);\r\n\r\n//   const handleFileSelect = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     const files = Array.from(e.target.files || []);\r\n//     if (files.length > 0) {\r\n//       onFileUpload(files);\r\n//     }\r\n//     e.target.value = '';\r\n//   }, [onFileUpload]);\r\n\r\n//   const formatFileSize = (bytes: number) => {\r\n//     if (bytes === 0) return '0 Bytes';\r\n//     const k = 1024;\r\n//     const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n//     const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n//     return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n//   };\r\n\r\n//   const getFileIcon = (type: string) => {\r\n//     if (type.includes('pdf')) return 'üìÑ';\r\n//     if (type.includes('word') || type.includes('document')) return 'üìù';\r\n//     if (type.includes('text')) return 'üìã';\r\n//     if (type.includes('image')) return 'üñºÔ∏è';\r\n//     return 'üìÅ';\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"space-y-6\">\r\n//       <div\r\n//         className={`\r\n//           relative border-2 border-dashed rounded-xl p-8 text-center transition-all duration-300\r\n//           ${isDragOver \r\n//             ? 'border-blue-400 bg-blue-50 scale-105' \r\n//             : 'border-gray-300 hover:border-gray-400 hover:bg-gray-50'\r\n//           }\r\n//           ${isUploading ? 'pointer-events-none opacity-50' : 'cursor-pointer'}\r\n//         `}\r\n//         onDragOver={handleDragOver}\r\n//         onDragLeave={handleDragLeave}\r\n//         onDrop={handleDrop}\r\n//         onClick={() => document.getElementById('file-input')?.click()}\r\n//       >\r\n//         <input\r\n//           id=\"file-input\"\r\n//           type=\"file\"\r\n//           multiple\r\n//           className=\"hidden\"\r\n//           onChange={handleFileSelect}\r\n//           accept=\".pdf,.doc,.docx,.txt,.rtf,.odt\"\r\n//         />\r\n        \r\n//         {isUploading ? (\r\n//           <div className=\"space-y-4\">\r\n//             <div className=\"flex justify-center\">\r\n//               <Loader className=\"h-12 w-12 text-blue-500 animate-spin\" />\r\n//             </div>\r\n//             <div>\r\n//               <p className=\"text-lg font-medium text-gray-900\">Uploading documents...</p>\r\n//               <p className=\"text-sm text-gray-500\">Please wait while we process your files</p>\r\n//             </div>\r\n//           </div>\r\n//         ) : (\r\n//           <div className=\"space-y-4\">\r\n//             <div className=\"flex justify-center\">\r\n//               <div className={`p-4 rounded-full transition-colors duration-300 ${\r\n//                 isDragOver ? 'bg-blue-100' : 'bg-gray-100'\r\n//               }`}>\r\n//                 <Upload className={`h-8 w-8 transition-colors duration-300 ${\r\n//                   isDragOver ? 'text-blue-500' : 'text-gray-400'\r\n//                 }`} />\r\n//               </div>\r\n//             </div>\r\n//             <div>\r\n//               <p className=\"text-lg font-medium text-gray-900\">\r\n//                 {isDragOver ? 'Drop your files here' : 'Upload your documents'}\r\n//               </p>\r\n//               <p className=\"text-sm text-gray-500 mt-1\">\r\n//                 Drag and drop or click to browse\r\n//               </p>\r\n//               <p className=\"text-xs text-gray-400 mt-2\">\r\n//                 Supports PDF, DOC, DOCX, TXT files\r\n//               </p>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       {uploadedFiles.length > 0 && (\r\n//         <div className=\"space-y-3\">\r\n//           <h3 className=\"text-sm font-medium text-gray-700 flex items-center gap-2\">\r\n//             <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n//             Uploaded Files ({uploadedFiles.length})\r\n//           </h3>\r\n          \r\n//           <div className=\"space-y-2 max-h-64 overflow-y-auto\">\r\n//             {uploadedFiles.map((file) => (\r\n//               <div\r\n//                 key={file.id}\r\n//                 className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg border hover:bg-gray-100 transition-colors\"\r\n//               >\r\n//                 <div className=\"flex items-center gap-3 flex-1 min-w-0\">\r\n//                   <span className=\"text-lg\">{getFileIcon(file.type)}</span>\r\n//                   <div className=\"flex-1 min-w-0\">\r\n//                     <p className=\"text-sm font-medium text-gray-900 truncate\">\r\n//                       {file.name}\r\n//                     </p>\r\n//                     <p className=\"text-xs text-gray-500\">\r\n//                       {formatFileSize(file.size)} ‚Ä¢ {file.uploadedAt.toLocaleDateString()}\r\n//                     </p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <Button\r\n//                   variant=\"ghost\"\r\n//                   size=\"sm\"\r\n//                   onClick={() => onDeleteFile(file.id)}\r\n//                   className=\"text-gray-400 hover:text-red-500 h-8 w-8 p-0\"\r\n//                 >\r\n//                   <X className=\"h-4 w-4\" />\r\n//                 </Button>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {uploadedFiles.length === 0 && !isUploading && (\r\n//         <div className=\"text-center py-8\">\r\n//           <AlertCircle className=\"h-8 w-8 text-gray-300 mx-auto mb-3\" />\r\n//           <p className=\"text-sm text-gray-500\">No documents uploaded yet</p>\r\n//           <p className=\"text-xs text-gray-400 mt-1\">Upload some documents to start chatting</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // Chat Interface Component\r\n// const ChatInterface = ({ messages, onSendMessage, isGenerating, hasDocuments }: {\r\n//   messages: ChatMessage[];\r\n//   onSendMessage: (message: string) => void;\r\n//   isGenerating: boolean;\r\n//   hasDocuments: boolean;\r\n// }) => {\r\n//   const [inputMessage, setInputMessage] = useState(\"\");\r\n//   const messagesEndRef = useRef<HTMLDivElement>(null);\r\n//   const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n//   const scrollToBottom = () => {\r\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     scrollToBottom();\r\n//   }, [messages]);\r\n\r\n//   const handleSubmit = (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     if (inputMessage.trim() && !isGenerating && hasDocuments) {\r\n//       onSendMessage(inputMessage.trim());\r\n//       setInputMessage(\"\");\r\n//     }\r\n//   };\r\n\r\n//   const handleKeyDown = (e: React.KeyboardEvent) => {\r\n//     if (e.key === 'Enter' && !e.shiftKey) {\r\n//       e.preventDefault();\r\n//       handleSubmit(e);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex flex-col h-full bg-gradient-to-b from-white to-gray-50/50\">\r\n//       <div className=\"p-6 border-b border-gray-100/80 bg-white/70 backdrop-blur-sm\">\r\n//         <div className=\"flex items-center gap-4\">\r\n//           <div className=\"relative\">\r\n//             <div className=\"absolute inset-0 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-2xl blur-sm opacity-20\"></div>\r\n//             <div className=\"relative p-3 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-2xl shadow-lg\">\r\n//               <MessageSquare className=\"h-6 w-6 text-white\" />\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"flex-1\">\r\n//             <h2 className=\"text-xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 bg-clip-text text-transparent\">\r\n//               AI Assistant\r\n//             </h2>\r\n//             <p className=\"text-sm text-gray-500 flex items-center gap-2\">\r\n//               <Sparkles className=\"h-3 w-3\" />\r\n//               {hasDocuments \r\n//                 ? \"Ready to answer questions about your documents\" \r\n//                 : \"Upload documents to start an intelligent conversation\"\r\n//               }\r\n//             </p>\r\n//           </div>\r\n//           <div className=\"flex items-center gap-2\">\r\n//             <div className={`w-2 h-2 rounded-full ${hasDocuments ? 'bg-green-400' : 'bg-amber-400'} animate-pulse`}></div>\r\n//             <span className=\"text-xs text-gray-500 font-medium\">\r\n//               {hasDocuments ? 'Ready' : 'Waiting'}\r\n//             </span>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"flex-1 overflow-hidden\">\r\n//         <div className=\"h-full overflow-y-auto p-6 space-y-6\">\r\n//           {messages.length === 0 ? (\r\n//             <div className=\"flex flex-col items-center justify-center h-full text-center py-16\">\r\n//               <div className=\"relative mb-6\">\r\n//                 <div className=\"absolute inset-0 bg-gradient-to-r from-blue-100 to-indigo-100 rounded-full blur-xl opacity-50\"></div>\r\n//                 <div className=\"relative w-20 h-20 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-full flex items-center justify-center border border-blue-100/50\">\r\n//                   <Bot className=\"h-10 w-10 text-blue-500\" />\r\n//                 </div>\r\n//               </div>\r\n//               <h3 className=\"text-2xl font-bold text-gray-900 mb-3\">\r\n//                 Welcome to DocuChat AI\r\n//               </h3>\r\n//               <p className=\"text-gray-500 max-w-md leading-relaxed\">\r\n//                 {hasDocuments \r\n//                   ? \"Your documents are ready! Start by asking me any questions about their content and I'll provide detailed insights.\"\r\n//                   : \"Upload your documents first, then I'll be ready to provide intelligent answers and insights about their content.\"\r\n//                 }\r\n//               </p>\r\n//               {hasDocuments && (\r\n//                 <div className=\"mt-6 p-4 bg-blue-50/50 rounded-xl border border-blue-100\">\r\n//                   <p className=\"text-sm text-blue-600 font-medium\">üí° Try asking questions like:</p>\r\n//                   <ul className=\"mt-2 text-xs text-blue-500 space-y-1\">\r\n//                     <li>‚Ä¢ \"What are the main topics covered?\"</li>\r\n//                     <li>‚Ä¢ \"Can you summarize the key points?\"</li>\r\n//                     <li>‚Ä¢ \"What specific details about [topic]?\"</li>\r\n//                   </ul>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           ) : (\r\n//             <>\r\n//               {messages.map((message) => (\r\n//                 <div\r\n//                   key={message.id}\r\n//                   className={`flex gap-4 ${message.type === 'user' ? 'flex-row-reverse' : 'flex-row'} animate-fade-in`}\r\n//                 >\r\n//                   <div className={`flex-shrink-0 w-10 h-10 rounded-2xl flex items-center justify-center shadow-lg ${\r\n//                     message.type === 'user' \r\n//                       ? 'bg-gradient-to-r from-emerald-500 to-green-600' \r\n//                       : 'bg-gradient-to-r from-blue-500 to-indigo-600'\r\n//                   }`}>\r\n//                     {message.type === 'user' ? (\r\n//                       <User className=\"h-5 w-5 text-white\" />\r\n//                     ) : (\r\n//                       <Bot className=\"h-5 w-5 text-white\" />\r\n//                     )}\r\n//                   </div>\r\n                  \r\n//                   <div className={`flex-1 max-w-4xl ${message.type === 'user' ? 'text-right' : 'text-left'}`}>\r\n//                     <div className={`inline-block p-4 rounded-2xl shadow-sm ${\r\n//                       message.type === 'user'\r\n//                         ? 'bg-gradient-to-r from-emerald-500 to-green-600 text-white'\r\n//                         : 'bg-white text-gray-900 border border-gray-100'\r\n//                     }`}>\r\n//                       <p className=\"whitespace-pre-wrap leading-relaxed\">{message.content}</p>\r\n//                     </div>\r\n//                     <p className=\"text-xs text-gray-400 mt-2 px-3 flex items-center gap-1\">\r\n//                       <span className=\"w-1 h-1 bg-gray-300 rounded-full\"></span>\r\n//                       {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n//                     </p>\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n              \r\n//               {isGenerating && (\r\n//                 <div className=\"flex gap-4 animate-fade-in\">\r\n//                   <div className=\"flex-shrink-0 w-10 h-10 rounded-2xl bg-gradient-to-r from-blue-500 to-indigo-600 flex items-center justify-center shadow-lg\">\r\n//                     <Bot className=\"h-5 w-5 text-white\" />\r\n//                   </div>\r\n                  \r\n//                   <div className=\"flex-1\">\r\n//                     <div className=\"inline-block p-4 bg-white rounded-2xl shadow-sm border border-gray-100\">\r\n//                       <div className=\"flex items-center gap-3 text-gray-600\">\r\n//                         <div className=\"flex space-x-1\">\r\n//                           <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-bounce\"></div>\r\n//                           <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-bounce\" style={{animationDelay: '0.1s'}}></div>\r\n//                           <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-bounce\" style={{animationDelay: '0.2s'}}></div>\r\n//                         </div>\r\n//                         <span className=\"text-sm font-medium\">AI is thinking...</span>\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n//             </>\r\n//           )}\r\n//           <div ref={messagesEndRef} />\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"p-6 border-t border-gray-100/80 bg-white/70 backdrop-blur-sm\">\r\n//         <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//           <div className=\"relative\">\r\n//             <Textarea\r\n//               ref={textareaRef}\r\n//               value={inputMessage}\r\n//               onChange={(e) => setInputMessage(e.target.value)}\r\n//               onKeyDown={handleKeyDown}\r\n//               placeholder={hasDocuments ? \"Ask anything about your documents...\" : \"Upload documents first to start chatting\"}\r\n//               disabled={!hasDocuments || isGenerating}\r\n//               className=\"min-h-[60px] max-h-32 resize-none pr-14 focus:ring-2 focus:ring-blue-500/20 focus:border-blue-300 border-gray-200 bg-white/80 backdrop-blur-sm shadow-sm rounded-xl\"\r\n//             />\r\n//             <Button\r\n//               type=\"submit\"\r\n//               size=\"sm\"\r\n//               disabled={!inputMessage.trim() || !hasDocuments || isGenerating}\r\n//               className=\"absolute bottom-3 right-3 h-8 w-8 p-0 bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 shadow-lg hover:shadow-xl transition-all duration-200 rounded-lg\"\r\n//             >\r\n//               <Send className=\"h-4 w-4\" />\r\n//             </Button>\r\n//           </div>\r\n          \r\n//           {!hasDocuments && (\r\n//             <div className=\"flex items-center gap-2 p-3 bg-amber-50/80 border border-amber-200 rounded-xl\">\r\n//               <div className=\"w-2 h-2 bg-amber-400 rounded-full animate-pulse\"></div>\r\n//               <p className=\"text-sm text-amber-700 font-medium\">\r\n//                 Please upload documents to enable the chat functionality\r\n//               </p>\r\n//             </div>\r\n//           )}\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // Main App Component\r\n// const ConsolidatedApp = () => {\r\n//   const [uploadedFiles, setUploadedFiles] = useState<UploadedFile[]>([]);\r\n//   const [chatMessages, setChatMessages] = useState<ChatMessage[]>([]);\r\n//   const [isUploading, setIsUploading] = useState(false);\r\n//   const [isGenerating, setIsGenerating] = useState(false);\r\n\r\n//   const handleFileUpload = async (files: File[]) => {\r\n//     setIsUploading(true);\r\n    \r\n//     // Simulate API call delay\r\n//     await new Promise(resolve => setTimeout(resolve, 2000));\r\n    \r\n//     const newFiles: UploadedFile[] = files.map(file => ({\r\n//       id: Math.random().toString(36).substr(2, 9),\r\n//       name: file.name,\r\n//       size: file.size,\r\n//       type: file.type,\r\n//       uploadedAt: new Date(),\r\n//     }));\r\n    \r\n//     setUploadedFiles(prev => [...prev, ...newFiles]);\r\n//     setIsUploading(false);\r\n//   };\r\n\r\n//   const handleSendMessage = async (message: string) => {\r\n//     if (!message.trim()) return;\r\n\r\n//     const userMessage: ChatMessage = {\r\n//       id: Math.random().toString(36).substr(2, 9),\r\n//       type: 'user',\r\n//       content: message,\r\n//       timestamp: new Date(),\r\n//     };\r\n\r\n//     setChatMessages(prev => [...prev, userMessage]);\r\n//     setIsGenerating(true);\r\n\r\n//     // Simulate API call delay\r\n//     await new Promise(resolve => setTimeout(resolve, 3000));\r\n\r\n//     const botMessage: ChatMessage = {\r\n//       id: Math.random().toString(36).substr(2, 9),\r\n//       type: 'bot',\r\n//       content: \"I understand your question about the uploaded documents. This is a simulated response. In a real implementation, this would be connected to your Flask backend API to process the documents and generate intelligent responses based on their content.\",\r\n//       timestamp: new Date(),\r\n//     };\r\n\r\n//     setChatMessages(prev => [...prev, botMessage]);\r\n//     setIsGenerating(false);\r\n//   };\r\n\r\n//   const handleDeleteFile = (fileId: string) => {\r\n//     setUploadedFiles(prev => prev.filter(file => file.id !== fileId));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100\">\r\n//       <Header />\r\n      \r\n//       <div className=\"container mx-auto px-4 py-8 max-w-7xl\">\r\n//         <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 h-[calc(100vh-12rem)]\">\r\n//           <div className=\"lg:col-span-1\">\r\n//             <div className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg border border-white/20 h-full overflow-hidden\">\r\n//               <div className=\"p-6 border-b border-gray-100\">\r\n//                 <div className=\"flex items-center gap-3\">\r\n//                   <div className=\"p-2 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-lg\">\r\n//                     <FileText className=\"h-5 w-5 text-white\" />\r\n//                   </div>\r\n//                   <div>\r\n//                     <h2 className=\"text-lg font-semibold text-gray-900\">Documents</h2>\r\n//                     <p className=\"text-sm text-gray-500\">{uploadedFiles.length} files uploaded</p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               <div className=\"p-6 h-full overflow-y-auto\">\r\n//                 <DocumentUpload\r\n//                   onFileUpload={handleFileUpload}\r\n//                   uploadedFiles={uploadedFiles}\r\n//                   onDeleteFile={handleDeleteFile}\r\n//                   isUploading={isUploading}\r\n//                 />\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"lg:col-span-2\">\r\n//             <div className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg border border-white/20 h-full\">\r\n//               <ChatInterface\r\n//                 messages={chatMessages}\r\n//                 onSendMessage={handleSendMessage}\r\n//                 isGenerating={isGenerating}\r\n//                 hasDocuments={uploadedFiles.length > 0}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ConsolidatedApp;"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}